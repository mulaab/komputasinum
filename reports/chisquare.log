Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.7/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.7/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
os.chdir(path)
import numpy as np
import pandas as pd

# 1. magic to print version
# 2. magic so that the notebook will reload external python modules
%load_ext watermark
%load_ext autoreload 
%autoreload 2

from sklearn.preprocessing import LabelBinarizer
from sklearn.feature_selection import chi2, SelectKBest
from sklearn.feature_extraction.text import CountVectorizer

#%watermark -a 'Mulaab' -d -t -v -p numpy,pandas,sklearn
------------------

[0;31m[0m
[0;31mModuleNotFoundError[0mTraceback (most recent call last)
[0;32m<ipython-input-2-24eee4ca2151>[0m in [0;36m<module>[0;34m()[0m
[1;32m      5[0m [0;31m# 1. magic to print version[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m      6[0m [0;31m# 2. magic so that the notebook will reload external python modules[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 7[0;31m [0mget_ipython[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mmagic[0m[0;34m([0m[0;34m'load_ext watermark'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      8[0m [0mget_ipython[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mmagic[0m[0;34m([0m[0;34m'load_ext autoreload'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      9[0m [0mget_ipython[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mmagic[0m[0;34m([0m[0;34m'autoreload 2'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py[0m in [0;36mmagic[0;34m(self, arg_s)[0m
[1;32m   2158[0m         [0mmagic_name[0m[0;34m,[0m [0m_[0m[0;34m,[0m [0mmagic_arg_s[0m [0;34m=[0m [0marg_s[0m[0;34m.[0m[0mpartition[0m[0;34m([0m[0;34m' '[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2159[0m         [0mmagic_name[0m [0;34m=[0m [0mmagic_name[0m[0;34m.[0m[0mlstrip[0m[0;34m([0m[0mprefilter[0m[0;34m.[0m[0mESC_MAGIC[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2160[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mrun_line_magic[0m[0;34m([0m[0mmagic_name[0m[0;34m,[0m [0mmagic_arg_s[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2161[0m [0;34m[0m[0m
[1;32m   2162[0m     [0;31m#-------------------------------------------------------------------------[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/interactiveshell.py[0m in [0;36mrun_line_magic[0;34m(self, magic_name, line)[0m
[1;32m   2079[0m                 [0mkwargs[0m[0;34m[[0m[0;34m'local_ns'[0m[0;34m][0m [0;34m=[0m [0msys[0m[0;34m.[0m[0m_getframe[0m[0;34m([0m[0mstack_depth[0m[0;34m)[0m[0;34m.[0m[0mf_locals[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2080[0m             [0;32mwith[0m [0mself[0m[0;34m.[0m[0mbuiltin_trap[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2081[0;31m                 [0mresult[0m [0;34m=[0m [0mfn[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m[0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2082[0m             [0;32mreturn[0m [0mresult[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2083[0m [0;34m[0m[0m

[0;32m<decorator-gen-56>[0m in [0;36mload_ext[0;34m(self, module_str)[0m

[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/magic.py[0m in [0;36m<lambda>[0;34m(f, *a, **k)[0m
[1;32m    186[0m     [0;31m# but it's overkill for just that one bit of state.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    187[0m     [0;32mdef[0m [0mmagic_deco[0m[0;34m([0m[0marg[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 188[0;31m         [0mcall[0m [0;34m=[0m [0;32mlambda[0m [0mf[0m[0;34m,[0m [0;34m*[0m[0ma[0m[0;34m,[0m [0;34m**[0m[0mk[0m[0;34m:[0m [0mf[0m[0;34m([0m[0;34m*[0m[0ma[0m[0;34m,[0m [0;34m**[0m[0mk[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    189[0m [0;34m[0m[0m
[1;32m    190[0m         [0;32mif[0m [0mcallable[0m[0;34m([0m[0marg[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/magics/extension.py[0m in [0;36mload_ext[0;34m(self, module_str)[0m
[1;32m     35[0m         [0;32mif[0m [0;32mnot[0m [0mmodule_str[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     36[0m             [0;32mraise[0m [0mUsageError[0m[0;34m([0m[0;34m'Missing module name.'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 37[0;31m         [0mres[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mshell[0m[0;34m.[0m[0mextension_manager[0m[0;34m.[0m[0mload_extension[0m[0;34m([0m[0mmodule_str[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     38[0m [0;34m[0m[0m
[1;32m     39[0m         [0;32mif[0m [0mres[0m [0;34m==[0m [0;34m'already loaded'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/extensions.py[0m in [0;36mload_extension[0;34m(self, module_str)[0m
[1;32m     81[0m             [0;32mif[0m [0mmodule_str[0m [0;32mnot[0m [0;32min[0m [0msys[0m[0;34m.[0m[0mmodules[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     82[0m                 [0;32mwith[0m [0mprepended_to_syspath[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mipython_extension_dir[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 83[0;31m                     [0m__import__[0m[0;34m([0m[0mmodule_str[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     84[0m             [0mmod[0m [0;34m=[0m [0msys[0m[0;34m.[0m[0mmodules[0m[0;34m[[0m[0mmodule_str[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     85[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0m_call_load_ipython_extension[0m[0;34m([0m[0mmod[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mModuleNotFoundError[0m: No module named 'watermark'

[0;31m---------------------------------------------------------------------------[0;32m
NOTE: If your import is failing due to a missing package, you can
manually install dependencies using either !pip or !apt.

To view examples of installing some common dependencies, click the
"Open Examples" button below.
[0;31m---------------------------------------------------------------------------[0m

ModuleNotFoundError: No module named 'watermark'

